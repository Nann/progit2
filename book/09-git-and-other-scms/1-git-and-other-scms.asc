== Git and Other Systems

โลกไม่ได้สมบูรณ์แบบ
โดยปกติแล้วคุณไม่สามารถย้ายทุกโปรเจคที่คุณทำอยู่มายัง Git ได้ทันที
บางครั้งคุณก็ต้องติดอยู่กับโปรเจคที่ใช้ VCS อื่นๆ และฝันเอาว่ามันเป็น Git
เราจะใช้ช่วงแรกของบทนี้ในการเรียนรู้วิธีที่จะใช้ Git ดั่ง Client เมื่อโปรเจคที่คุณกำลังทำอยู่นั้นอยู่บนระบบอื่น
We'll spend the first part of this chapter learning about ways to use Git as a client when the project you're working on is hosted in a different system.

ในบางจังหวะคุณอาจรู้สึกอยากจะย้ายโปรเจคของคุณมายัง Git
ในช่วงหลังของบทนี้จะครอบคลุมการย้ายโปรเจคของคุณจากระบบอื่นมายัง Git รวมถึงวิธีการย้ายจากระบบอื่นที่ไม่มีตัวช่วย

=== Git as a Client

(((Git as a client)))
นักพัฒนาได้รับประสบการณ์ที่ดีมากจาก Git ถึงแม้ว่าเค้าจะใช้มันเฉพาะบนเครื่องของตัวเองและที่เหลือทั้งทีมใช้ VCS ตัวอื่น
มีตัวเชื่อมต่อระหว่าง Git กับระบบอื่นมากมายที่เรียกว่า ``bridges,'' ให้ใช้
เราจะพูดถึงตัวนึงที่คุณน่าจะต้องได้ใช้เพื่อเข้าป่า

include::sections/client-svn.asc[]

include::sections/client-hg.asc[]

include::sections/client-p4.asc[]

include::sections/client-tfs.asc[]

[[_migrating]]
=== Migrating to Git

(((Migrating to Git)))
ถ้าคุณมีโค้ดอยู่ใน VCS ตัวอื่นแต่คุณตัดสินใจที่จะเริ่มใช้ Git คุณต้องทำการย้ายโปรเจคของคุณไม่ทางใดก็ทางหนึ่ง
ในส่วนนี้จะพูดถึงตัวนำเข้าหลายตัวของระบบที่ใช้กันและจะแสดงวิธีการที่จะสร้างตัวนำเข้าของคุณเอง
You'll learn how to import data from several of the bigger professionally used SCM systems, because they make up the majority of users who are switching, and because high-quality tools for them are easy to come by.

include::sections/import-svn.asc[]

include::sections/import-hg.asc[]

include::sections/import-p4.asc[]

include::sections/import-tfs.asc[]

include::sections/import-custom.asc[]

=== Summary

คุณควรจะรู้สึกสบายกับการใช้ Git ดั่ง client สำหรับระบบ version control อื่นๆ หรือการย้ายจาก repository อื่นที่ใกล้เคียงกับ Git โดยไม่สูญเสียข้อมูลใดๆ
ในบทถัดไปเราจะพูดถึงการทำงานภายในของ Git เพื่อนที่คุณจะได้สร้างมันได้ ถ้าจำเป็น
