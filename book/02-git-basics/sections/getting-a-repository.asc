[[_getting_a_repo]]
=== ลองดูสัก 1 repository

คุณสามารถเริ่มมีโปรเจ็คใน Git ได้สองวิธีหลักๆคือ
วิธีแรก เอาโปรเจ็คที่มีอยู่แล้ว หรือ directory ก็ได้ มา import เข้าไปใน Git
วิธีที่สองคือโคลน มาจาก repository ที่มีอยู่จาก server ใด้สักแห่ง

==== การสร้าง Repository จากไดเรคทอรี่ที่สร้างไว้แล้ว

ถ้าคุณกำลังจะเริ่ม track โปรเจ็คที่ทำไว้แล้วใน git คุณต้องไปที่ directory ของโปรเจ็คนั้น และพิมพ์คำสั่ง

[source,console]
----
$ git init
----

คำสั่งนี้จะสร้าง directory ย่อยขึ้นมาใหม่ ชื่อว่า `.git` ซึ่งใช้เก็บทุกสิ่งที่จำเป็นของไฟล์ทั้งหมดใน repository - เรียกว่าโครงร่างของ git
และตอนนี้จะยังไม่มีอะไรถูก track (ดู <<_git_internals>> สำหรับรายละเอียดเพิ่มเติมว่าอะไรที่ถูกเก็บอยู่ในไดเรคทอรี่ `.git` ที่เพิ่งถูกสร้างขึ้นมา)(((git commands, init)))

ถ้าคุณต้องการเริ่มทำ เวอร์ชั่นคอนโทรลพวกไฟล์ที่มีอยู่เดิม (ซึ่งต่างจากไดเร็คทอรี่ที่ว่าง)
คุณควรเริ่มการ track ไฟล์พวกนั้น และ commit
ซึ่งคุณสามารถทำมันได้แค่ไม่กี่คำสั่ง โดยคำสั่ง `git add` จะบอกว่าไฟล์ไหนที่คุณต้องการ track ตามด้วยคำสั่ง `git commit`:

[source,console]
----
$ git add *.c
$ git add LICENSE
$ git commit -m 'initial project version'
----

เราจะได้เห็นว่าคำสั่งเหล่านี้ใช้เวลานิดเดียว ซึ่งตรงนี้คุณก็จะได้ Git repository พร้อมไฟล์ที่ถูก track และได้ commit แล้ว

[[_git_cloning]]
==== การโคลน repository ที่มีอยู่แล้ว

ถ้าคุณต้องการได้ repository ที่มีอยู่แล้ว - ตัวอย่างเช่น มีโปรเจ็คหนึ่งที่คุณสนใจอยากมีส่วนร่วม - คำสั่งที่คุณต้องการคือ `git clone`
ถ้าคุณคุ้นเคยกับระบบ VCS อื่นๆยกตัวอย่างเช่น Subversion ขอให้รู้ไว้ว่า คำสั่ง "clone" ไม่ใช่ "checkout"
ซึ่งนี่คือความต่างที่สำคัญมาก - แทนที่จะเอาแค่สำเนา Git จะรับเอาสำเนาเกือบทั้งหมดของข้อมูลทุกชิ้นที่เซิฟเวอร์มี
รวมถึงทุกๆเวอร์ชั่นของทุกๆไฟล์ที่มีในประวัติของโปรเจ็คลงมา เมื่อคุณใช้คำสั่ง `git clone`
นั่นแปลว่า ถ้าเกิดอะไรขึ้นกับดิสบนเซิฟเวอร์ คุณสามารถจะใช้โคลนจาก client ไหนก็ได้กลับมาคืนไว้ใน server ซึ่งจะได้ state สุดท้ายที่ถูกโคลนไป (คุณอาจจะเสียบางอย่างที่ฝั่ง server มีไปบ้าง แต่ทุกๆเวอร์ชั่นจะยังอยู่ - ดู <<_git_on_the_server>> สำหรับรายละเอียดเพิ่มเติม)

คุณโคลน repository ได้ด้วยคำสั่ง `git clone [url]`.(((git commands, clone))) ตัวอย่างเช่น ถ้าคุณต้องการโคลนไลบรารี่ Git linkable หรือเรียกว่า libgit2 คำสามารถทำได้ดังนี้

[source,console]
----
$ git clone https://github.com/libgit2/libgit2
----

เสร็จแล้วจะเกิดไดเร็คทอรี่ชื่อ ``libgit2'' พร้อมกับการสร้างไดเร็คทอรี่ .git อยู่ในนั้น ดึงข้อมูลทั้งหมดของจาก repository ลงมา และได้สำเนางานเวอร์ชั่นล่าสุดเรียบร้อย
ถ้าคุณลองเข้าไปในไดเรคทอรี่ `libgit2` ที่ถูกสร้างขึ้นมาใหม่นี้ คุณก็จะเห็นไฟล์ของโปรเจ็คในนั้น พร้อมให้ทำงาน หรือใช้ได้เลย
ถ้าคุณต้องารโคลน repository ให้เข้าไปไว้ในไดเร็คทอรี่ชื่ออื่นนอกเหนือจาก ``libgit2'' คุณสามารถระบุเจาะจงลงไปได้เลยตามคำสั่งต่อไปนี้:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2 mylibgit
----

ซึ่งคำสั่งนี้จะทำเหมือนคำสั่งก่อนหน้านี้เพียงแต่จะนำทั้งหมดไปอยู่ในไดเรคทอรี่ชื่อ `mylibgit` แทน

Git มีหลายโปรโตคอลสำหรับถ่ายโอนไฟล์ให้เลือกใช้ โดยตัวอย่างก่อนหน้านี้ได้ใช้ โปรโตคอล  `https://` แต่คุณอาจจะได้เห็นแบบอื่นด้วยเช่น `git://` หรือ `user@server:path/to/repo.git` ซึ่งใช้โปรโตคอล SSH
<<_git_on_the_server> จะแนะนำตัวเลือกทั้งหมดที่เป็นไปได้ที่เซิฟเวอร์จะตั้งค่าให้เข้าถึง Git repository ได้ รวมถึงข้อดีข้อเสียของแต่ละตัวเลือก
