[[_first_time]]
=== ติดตั้ง Git ครั้งแรก

หลังจากมี Git บนเครื่องแล้ว ต้อง customize Git environment ซักนิดก่อน ขั้นตอนนี้ทำแค่ครั้งเดียวพอ ถึง upgrade version ก็ไม่ต้องมานั่ง set ใหม่ ถ้าวันหลังอยากจะเปลี่ยนมันก็เปลี่ยนได้ตลอดเวลา แค่ run command ซ้ำแค่นั้นเอง

Git มากับ tool ที่เรียกว่า git config เปิดช่องให้ get หรือ set ตัวแปร configuration ที่ควบคุมการหน้าตา, คำสั่ง และทำงานของ Git ได้ ตัวแปรเหล่านี้ถูกแบ่งเก็บใน 3 ที่ดังนี้:

1. file /etc/gitconfig: เก็บข้อมูล user ทุกคนในระบบรวมถึง repository ทั้งหลาย ถ้าคุณส่ง option --system ให้ git config มันจะอ่านหรือเขียนใน file นี้ตรงๆ
2. file ~/.gitconfig: เป็น file เฉพาะของ user คุณเท่านั้น สามารถเจาะจงให้ Git เขียนหรืออ่าน file นี้ได้โดยการส่ง --global option ให้มัน
3. config file ใน git directory (ซึ่งอยู่ที่ .git/config) ของ repository ใดๆที่คุณใช้งาน: เฉพาะเจาะจงกับ repository นั้นๆ แต่ละ level คอยบังค่าที่ set ใน level ก่อนๆ ฉะนั้น ค่าที่ set ไว้ใน .git/config ก็จะบังค่าใน /etc/gitconfig

บน Windows นั้น Git อ่านค่าใน file .gitconfig ใน $HOME directory (ส่วนใหญ่จะอยู่ที่ C:\Documents and Settings\$USER) มันดูค่าใน /etc/gitconfig ด้วยเหมือนกัน แต่ต้องอ้างอิงกับ MSys root ซึ่งจะอยู่ที่ที่คุณ ลง Git ไว้ตอนที่ run installer

==== Identity ของคุณ

อย่างแรกที่ควรทำหลังจากลง Git คือการ set user name และ e-mail address ของคุณ ที่มันจำเป็นเพราะทุกๆ commit ใน Git จะใช้ข้อมูลนี้และมันจะถูกสลักลงไปในแต่ละ commit ที่คุณส่ง:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

ย้ำอีกครั้ง คุณจำเป็นต้อง set ค่าเหล่านี้แค่ครั้งเดียวถ้าคุณใช้ option --global เพราะ Git จะใช้ข้อมูลนั้นสำหรับทุกๆ action ที่คุณใช้บน system นั้น ถ้าอยากทับค่านั้นด้วชื่อหรือ e-mail address อื่น สำหรับบาง project คุณก็ทำได้โดยการ run command แล้วไม่ต้องส่ง option --global เข้าไปเวลาคนทำ project นั้น

==== Editor ของคุณ

หลังจาก setup Identity ของคุณแล้ว คุณก็สามารถเลือก default text editor ที่จะถูกเลือกใช้เวลา Git ต้องการให้คุณพิมพ์ message ได้ โดยปรกติแล้ว Git จะใช้ default editor ของระบบคุณ ซึ่งส่วนใหญ่จะเป็น Vi หรือ Vim ถ้าคุณอยากใช้ตัวอื่นเช่น Emacs ก็ทำได้ตังนี้:

[source,console]
----
$ git config --global core.editor emacs
----

[คำเตือน]
====
Vim และ Emacs เป็น editor ที่ได้รับความนิยมสูงมากในหมู่นักพัฒนาในโลกของ Unix เช่น Linux หรือ Mac
ถ้าไม่ถนัดกับการใช้งาน editor สองตัวนี้หรือเราเป็นแฟนคลับ Windows เราก็ต้องไปค้นหาข้อมูลต่อไปว่าเราจะ set up ให้ editor ที่เราทำงานอยู่ให้ทำงานกับ Git ได้อย่างไร
ดังนัั้นถ้าเราไม่คุ้นชินกับ editor และไม่ถนัดกับการใช้งานทั้ง vim และ emacs เราจะสับสนมากกับการใช้งานเมื่อเปิด editor สองตัวนี้ออกมา
====

==== ตรวจสอบ Settings

ถ้าอยาก check settings ของคุณ คุณสามารถใช้คำสั่ง git config --list เพื่อจะ list settings ทั้งหลายแหล่ที่ Git มี ณ ตอนนั้นมาให้ดูได้:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

บาง key อาจจะซ้ำเพราะ Git อ่านค่า key เดียวกันจาก file ต่างๆ (เช่นจาก /etc/gitconfig และ ~/.gitconfig เป็นต้น) ในกรณีนั้น Git จะใช้ค่าสุดท้ายที่มันเห็น

คุณตรวจสอบได้ด้วยว่า Git มันกำลังคิดว่าค่าของ key นั้นๆเป็นอะไรโดยพิมพ์ว่า git config {key}:(((git commands, config)))

[source,console]
----
$ git config user.name
John Doe
----
